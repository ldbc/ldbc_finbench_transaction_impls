n({@Loan && _id==$id} as loan).re({@Deposit && timestamp <> [$startTime,$endTime]}).n({@Account} as src)
with src,loan.loanAmount as loanAmount
exta(complex_read).params({
	srcs:src,
	edgeDirection:"out",
	depth:3,
	limit:10000000,
	edge_schema:"Transfer",
	edge_timestamp:"timestamp",
	edge_amount:"amount",
    amount:$threshold,
    pre:0,
	range_begin:$startTime,
	range_end:$endTime,
	noCircle:0,
	top_n:$truncationLimit,
    order:$truncationOrder,
	return_type:1
}).stream() as rest
with distinct(rest) as rr
group by rr.dest
with rr.dest as rd,(rr.length+1) as length,sum(rr.amount)/loanAmount as ratio
find().nodes(rd) as dd
with dd._id as destid,ratio,length
return table(destid,round(ratio,3),length)
order by length desc,ratio desc,destid asc