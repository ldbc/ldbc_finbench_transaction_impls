n({@Loan && _id==$id} as loan).re({@Deposit && timestamp <> [$startTime,$endTime]}).n({@Account} as src)
with src,loan.loanAmount as loanAmount
n(src).re({(@Transfer || @Withdraw) && timestamp <> [$startTime,$endTime] && amount>$threshold})[0:2].n({@Account}).re({(@Transfer || @Withdraw) && timestamp <> [$startTime,$endTime] && amount>$threshold} as edge).n({@Account} as dest) as path
group by dest with min(length(path)+1) as minlength,collect(distinct(edge)) as arrE
CALL{with arrE UNCOLLECT arrE as e with sum(e.amount) as esum return esum}
with dest._id as destid,dest.accountId as accountId2,round(esum/loanAmount,3) as ratio,minlength as minlength2
return table(destid,ratio,minlength2)
order by minlength2 desc,ratio desc,accountId2 asc