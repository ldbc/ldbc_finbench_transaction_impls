n({@Person && _id==$id}).re({@Own}).n({@Account} as start)
exta(complex_read).params({
	srcs:start,
	edgeDirection:"in",
	depth:3,
	limit:10000000,
	edge_schema:"Transfer",
	edge_timestamp:"timestamp",
	edge_amount:"amount",
    amount:-1,
    pre:1,
	range_begin:$startTime,
	range_end:$endTime,
	noCircle:0,
	top_n:$truncationLimit,
    order:$truncationOrder,
	return_type:1
}).stream() as rest
with distinct(rest.dest) as dd
n({dd} as other).le({@Deposit.timestamp <> [$startTime,$endTime]} as deposit).n({@Loan} as loan) as path
group by other._id
with other._id as otherId,round(sum(loan.loanAmount),3) as sumLoanAmount,round(sum(loan.balance),3) as sumLoanBalance
return table(otherId,sumLoanAmount,sumLoanBalance)
order by sumLoanAmount desc,otherId asc