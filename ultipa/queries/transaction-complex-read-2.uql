n({@Person && _id==$id}).re({@Own}).n({@Account} as account1)
n({@Account} as other).re({@Transfer.timestamp <> [$startTime,$endTime] && @Transfer.timestamp>prev_e.@Transfer.timestamp})[1:3].n(account1)
with distinct(other) as dd
    call{
	    with dd
		n({_uuid == dd} as other1).le({@Deposit.timestamp <> [$startTime,$endTime]} as deposit).n({@Loan} as loan)
		with distinct(loan) as dloan
        with other1._id as otherId,dloan as dloan2
        with round(sum(dloan2.loanAmount),3) as sumLoanAmount,round(sum(dloan2.balance),3) as sumLoanBalance
        return table(otherId,sumLoanAmount,sumLoanBalance) as m
	}
RETURN m
order by m.sumLoanAmount desc,m.otherId asc